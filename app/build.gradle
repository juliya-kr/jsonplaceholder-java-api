/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.10.2/userguide/building_java_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id 'org.springframework.boot' version '3.2.6'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'application'
    id 'java'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // This dependency is used by the application.
    // implementation libs.guava
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.postgresql:postgresql:42.7.3'
    implementation('io.jsonwebtoken:jjwt-api:0.12.5')
    implementation 'org.projectlombok:lombok:1.18.30'
    runtimeOnly('io.jsonwebtoken:jjwt-impl:0.12.5')
    runtimeOnly('io.jsonwebtoken:jjwt-jackson:0.12.5')
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.1'
    testImplementation 'com.h2database:h2:2.2.224'

    // Testcontainers for integration tests
    testImplementation 'org.testcontainers:junit-jupiter:1.19.7'
    testImplementation 'org.testcontainers:postgresql:1.19.7'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'com.example.jsonplaceholder.App'
}

test {
    useJUnitPlatform()
}

configurations.all {
    resolutionStrategy {
        force 'io.jsonwebtoken:jjwt-api:0.12.5', 'io.jsonwebtoken:jjwt-impl:0.12.5', 'io.jsonwebtoken:jjwt-jackson:0.12.5'
    }
}
